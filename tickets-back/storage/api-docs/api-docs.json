{
    "openapi": "3.0.0",
    "info": {
        "title": "Biblionacho API",
        "description": "Listado de URI'S para la API de Biblionacho",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login for users",
                "description": "Login",
                "operationId": "login",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@biblionacho.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "biblionacho"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged in"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "Bearer token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register for users",
                "description": "Register",
                "operationId": "register",
                "requestBody": {
                    "description": "User registration",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identification",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "identification": {
                                        "type": "string",
                                        "example": "11440895789"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@biblionacho.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout for authenticated users",
                "description": "Logout",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer id|YOUR_ACCESS_TOKEN_HERE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "token": [
                                                    "The token field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/status/index": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "List of Status",
                "description": "List of Status",
                "operationId": "StatusIndex",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Status"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Status not found"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status/store": {
            "post": {
                "tags": [
                    "Status"
                ],
                "summary": "Create Status",
                "description": "Create a new Status",
                "operationId": "StoreStatus",
                "requestBody": {
                    "description": "Status information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Active"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The Status is active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered"
                                        },
                                        "Status": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status/show/{id}": {
            "get": {
                "tags": [
                    "Status"
                ],
                "summary": "Show Status",
                "description": "Show a Status by ID",
                "operationId": "ShowStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "Status": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The Status with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status/update/{id}": {
            "put": {
                "tags": [
                    "Status"
                ],
                "summary": "Update Status",
                "description": "Update a Status by ID",
                "operationId": "UpdateStatus",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer "
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Status information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Active"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The Status is active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "Status": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The Status with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/status/destroy/{id}": {
            "delete": {
                "tags": [
                    "Status"
                ],
                "summary": "Delete Status",
                "description": "Delete a Status by ID",
                "operationId": "DestroyStatus",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "Status": {
                                            "$ref": "#/components/schemas/Status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The Status with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tickets/index": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "All tickets",
                "description": "Show all  tickets",
                "operationId": "IndexTickets",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer id|YOUR_ACCESS_TOKEN_HERE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok 200"
                                        },
                                        "Tickets": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Ticket"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Tickets not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tickets/store": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Create a ticket",
                "description": "Create a ticket",
                "operationId": "StoreTicket",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer\n     *   id|YOUR_ACCESS\n     *   TOKEN_HERE\n     *  "
                        }
                    }
                ],
                "requestBody": {
                    "description": " of ticket",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title ",
                                    "description",
                                    "deadline",
                                    "user_id",
                                    "status_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "implement CRUD for ticket management"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Don't forget to implement a deadline for the ticket"
                                    },
                                    "deadline": {
                                        "type": "string",
                                        "example": "24-05-2024"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered"
                                        },
                                        "response": {
                                            "$ref": "#/components/schemas/Ticket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tickets/show/{id}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Show ticket",
                "description": "Show a ticket by ID",
                "operationId": "ShowTicket",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer YOUR_ACCESS_TOKEN_HERE"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        },
                                        "ticketUsers": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "example": "implemnet crud for tickets"
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2021-05-24 00:00:00"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2021-05-24 00:00:00"
                                                    },
                                                    "deadline": {
                                                        "type": "string",
                                                        "example": "2021-05-24 00:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The ticket with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tickets/update/{id}": {
            "put": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Update ticket",
                "description": "Update a ticket by ID",
                "operationId": "UpdateTicket",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string\n     * ",
                            "default": "Bearer\n     * id|YOUR_ACCESS\n     * _TOKEN_HERE\n     * "
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": " of ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": " of ticket",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title ",
                                    "description",
                                    "deadline",
                                    "user_id",
                                    "status_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "implement CRUD for ticket management"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Don't forget to implement a deadline for the ticket"
                                    },
                                    "deadline": {
                                        "type": "string",
                                        "example": "24-05-2024"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "ticket": {
                                            "$ref": "#/components/schemas/Ticket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The ticket with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tickets/destroy/{id}": {
            "delete": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Delete ticket",
                "description": "Delete a ticket by ID",
                "operationId": "DestroyTicket",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string\n     * ",
                            "default": "Bearer\n     * id|YOUR_ACCESS\n     * _TOKEN_HERE\n     * "
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": " of ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "ticket": {
                                            "$ref": "#/components/schemas/Ticket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The ticket with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/index": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Index user",
                "description": "Show users",
                "operationId": "IndexUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer YOUR_ACCESS_TOKEN_HERE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok 200"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/store": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create users for admin",
                "description": "Create users",
                "operationId": "Create",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer id|YOUR_ACCESS_TOKEN_HERE"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User creation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identification",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "identification": {
                                        "type": "string",
                                        "example": "114459875"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "Alfredo"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Mercurio"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "alfred@biblionacho.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully registered"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/show/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show user",
                "description": "Show a user by ID",
                "operationId": "ShowUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer YOUR_ACCESS_TOKEN_HERE"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok 200"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "id": [
                                                    "The id is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "NotFound"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The user with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/update/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update users for admin",
                "description": "Update users",
                "operationId": "Update",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer id|YOUR_ACCESS_TOKEN_HERE"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "identification",
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "identification": {
                                        "type": "string",
                                        "example": "114459875"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "Alfredo"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Mercurio"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "alfred@biblionacho.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully updated"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The User with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/destroy/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a user by ID",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer YOUR_ACCESS_TOKEN_HERE"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully deleted"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "id": [
                                                    "The id is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "Internal server error!"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "errors": [
                                                    "The user with the provided ID was not found."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "identification",
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "identification": {
                        "description": "The user's identification",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "email": {
                        "description": "The user's email",
                        "type": "string",
                        "example": "admin@biblionacho.com"
                    },
                    "password": {
                        "description": "The user's password",
                        "type": "string",
                        "example": "biblionacho"
                    },
                    "password_confirmation": {
                        "description": "The user's password confirmation",
                        "type": "string",
                        "example": "biblionacho"
                    },
                    "first_name": {
                        "description": "The user's first name",
                        "type": "string",
                        "example": "Benjamin"
                    },
                    "last_name": {
                        "description": "The user's last name",
                        "type": "string",
                        "example": "Franklin"
                    }
                },
                "type": "object"
            },
            "Status": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Ticket": {
                "required": [
                    "title ",
                    "description",
                    "deadline",
                    "user_id",
                    "status_id"
                ],
                "properties": {
                    "title": {
                        "description": "title of ticket",
                        "type": "string",
                        "example": "implement CRUD for ticket management"
                    },
                    "description": {
                        "description": "Don't forget to implement a deadline for the ticket",
                        "type": "string",
                        "example": ""
                    },
                    "deadline": {
                        "description": "deadline of the  ticket",
                        "type": "string",
                        "example": "24-05-2024"
                    },
                    "user_id": {
                        "description": "User responsible for resolving the ticket",
                        "type": "integer",
                        "example": 1
                    },
                    "status_id": {
                        "description": "status ID of the  ticket",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            }
        }
    }
}